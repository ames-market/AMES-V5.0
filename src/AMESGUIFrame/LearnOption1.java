


/*
 * LearnOption1.java
 *
 * Created on June 1, 2007, 12:28 PM
 */

package AMESGUIFrame;

import javax.swing.JOptionPane;

public class LearnOption1 extends javax.swing.JFrame {
    
    /** Creates new form LearnOption1 
     * @param frame 
     * @param bShow 
     */
    public LearnOption1(AMESFrame frame, boolean bShow) {
        amesFrame=frame;
        bPrevNextButtonShown=bShow;
        bOkSelect=false;
        
        initComponents();
        
        if(bPrevNextButtonShown){
            setTitle("Step 4: Variant of Roth Erev RL: Parameters");
            OKButton.setVisible(false);
        }
        else{
            setTitle("Variant of Roth Erev RL: Parameters");
            NextButton.setVisible(false);
            PrevButton.setVisible(false);
        }
        
   }
    
public void SetInitParameters(double dInitPropensity, double dCooling, double dRecency, double dExperimentation, 
        double iM1, double iM2, double iM3, double dRI_MAX_Lower,
        double dRI_MAX_Upper, double dRI_MIN_C, double dSlopeStart, double iSCostExcluded){
        
    bOkSelect=false;
    
    Cooling=dCooling;
    Experimentation=dExperimentation;
    InitPropensity=dInitPropensity;
    Recency=dRecency;
    
    M1=(int)iM1;
    M2=(int)iM2;
    M3=(int)iM3;
    RI_MAX_Lower=dRI_MAX_Lower;
    RI_MAX_Upper=dRI_MAX_Upper;
    RI_MIN_C=dRI_MIN_C;
    SlopeStart=dSlopeStart;
    iSCostExcludedFlag=(int)iSCostExcluded;

    CoolingTextField.setText(String.valueOf(Cooling));
    ExperimentationTextField.setText(String.valueOf(Experimentation));
    InitPropensityTextField.setText(String.valueOf(InitPropensity));
    RecencyTextField.setText(String.valueOf(Recency));
    
    M1TextField.setText(String.valueOf(M1));
    M2TextField.setText(String.valueOf(M2));
    M3TextField.setText(String.valueOf(M3));
    RI_MAX_LowerTextField.setText(String.valueOf(RI_MAX_Lower));
    RI_MAX_UpperTextField.setText(String.valueOf(RI_MAX_Upper));
    RI_MIN_CTextField.setText(String.valueOf(RI_MIN_C));
    SlopeStartTextField.setText(String.valueOf(SlopeStart));
    
    if(iSCostExcludedFlag==1)
        NetEarningsRadioButton.setSelected(true);
    else
        ProfitRadioButton.setSelected(true);
}    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        CoolingTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ExperimentationTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        InitPropensityTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        RecencyTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        M1TextField = new javax.swing.JTextField();
        M2TextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        M3TextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        RI_MAX_LowerTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        RI_MAX_UpperTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        SlopeStartTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        RI_MIN_CTextField = new javax.swing.JTextField();
        OKButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        PrevButton = new javax.swing.JButton();
        NextButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        GenNameComboBox = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        ProfitRadioButton = new javax.swing.JRadioButton();
        NetEarningsRadioButton = new javax.swing.JRadioButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Learning Parameters", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12), new java.awt.Color(0, 0, 0)));
        jPanel1.setFont(new java.awt.Font("Arial", 0, 12));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel1.setText("Cooling:");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        CoolingTextField.setFont(new java.awt.Font("Arial", 0, 12));
        CoolingTextField.setText("1000");
        CoolingTextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel2.setText("Experimentation:");
        jLabel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ExperimentationTextField.setFont(new java.awt.Font("Arial", 0, 12));
        ExperimentationTextField.setText("0.96");
        ExperimentationTextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel3.setText("Initial Propensity:");
        jLabel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        InitPropensityTextField.setFont(new java.awt.Font("Arial", 0, 12));
        InitPropensityTextField.setText("6000");
        InitPropensityTextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel4.setText("Recency:");
        jLabel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RecencyTextField.setFont(new java.awt.Font("Arial", 0, 12));
        RecencyTextField.setText("0.04");
        RecencyTextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(ExperimentationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(InitPropensityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(CoolingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(RecencyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(InitPropensityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(CoolingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(RecencyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ExperimentationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Action Domain Parameters", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12), new java.awt.Color(0, 0, 0)));
        jPanel2.setFont(new java.awt.Font("Arial", 0, 12));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel5.setText("M1:");
        jLabel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        M1TextField.setFont(new java.awt.Font("Arial", 0, 12));
        M1TextField.setText("10");
        M1TextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        M2TextField.setFont(new java.awt.Font("Arial", 0, 12));
        M2TextField.setText("10");
        M2TextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel6.setText("M2:");
        jLabel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel7.setText("M3:");
        jLabel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        M3TextField.setFont(new java.awt.Font("Arial", 0, 12));
        M3TextField.setText("1");
        M3TextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel8.setText("RIMaxL:");
        jLabel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RI_MAX_LowerTextField.setFont(new java.awt.Font("Arial", 0, 12));
        RI_MAX_LowerTextField.setText("0.75");
        RI_MAX_LowerTextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel9.setText("RIMaxU:");
        jLabel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RI_MAX_UpperTextField.setFont(new java.awt.Font("Arial", 0, 12));
        RI_MAX_UpperTextField.setText("0.75");
        RI_MAX_UpperTextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel10.setText("Slope Start:");
        jLabel10.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SlopeStartTextField.setFont(new java.awt.Font("Arial", 0, 12));
        SlopeStartTextField.setText("0.001");
        SlopeStartTextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel11.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel11.setText("RIMinC:");
        jLabel11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RI_MIN_CTextField.setFont(new java.awt.Font("Arial", 0, 12));
        RI_MIN_CTextField.setText("1.00");
        RI_MIN_CTextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(SlopeStartTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(RI_MIN_CTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(M1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(M2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(M3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(RI_MAX_LowerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(RI_MAX_UpperTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RI_MAX_LowerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RI_MAX_UpperTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(RI_MIN_CTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(SlopeStartTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        OKButton.setFont(new java.awt.Font("Arial", 0, 12));
        OKButton.setText("Ok");
        OKButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        CancelButton.setFont(new java.awt.Font("Arial", 0, 12));
        CancelButton.setText("Cancel");
        CancelButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CancelButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        PrevButton.setFont(new java.awt.Font("Arial", 0, 12));
        PrevButton.setText("<< Prev");
        PrevButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        PrevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrevButtonActionPerformed(evt);
            }
        });

        NextButton.setFont(new java.awt.Font("Arial", 0, 12));
        NextButton.setText("Next >>");
        NextButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel12.setText("GenCos:");
        jLabel12.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        GenNameComboBox.setEditable(true);
        GenNameComboBox.setFont(new java.awt.Font("Arial", 0, 12));
        GenNameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenNameComboBoxActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Reward Selection", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12), new java.awt.Color(0, 0, 0)));

        buttonGroup1.add(ProfitRadioButton);
        ProfitRadioButton.setFont(new java.awt.Font("Arial", 0, 12));
        ProfitRadioButton.setText("Profits");
        ProfitRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfitRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(NetEarningsRadioButton);
        NetEarningsRadioButton.setFont(new java.awt.Font("Arial", 0, 12));
        NetEarningsRadioButton.setText("Net Earnings");
        NetEarningsRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NetEarningsRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(ProfitRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addComponent(NetEarningsRadioButton)
                .addGap(51, 51, 51))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProfitRadioButton)
                    .addComponent(NetEarningsRadioButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(GenNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(PrevButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(NextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(GenNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NextButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PrevButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CancelButton)
                    .addComponent(OKButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed
    String strErrorMessage=SingleGenDataVerify();
    if(strErrorMessage.isEmpty()){
        genLearningData[iSelectedIndex][0]=InitPropensity;
        genLearningData[iSelectedIndex][1]=Cooling;
        genLearningData[iSelectedIndex][2]=Recency;
        genLearningData[iSelectedIndex][3]=Experimentation;
        genLearningData[iSelectedIndex][4]=M1;
        genLearningData[iSelectedIndex][5]=M2;
        genLearningData[iSelectedIndex][6]=M3;
        genLearningData[iSelectedIndex][7]=RI_MAX_Lower;
        genLearningData[iSelectedIndex][8]=RI_MAX_Upper;
        genLearningData[iSelectedIndex][9]=RI_MIN_C;
        genLearningData[iSelectedIndex][10]=SlopeStart;
        genLearningData[iSelectedIndex][11]=iSCostExcludedFlag;
    }
        
    this.setVisible(false);
    amesFrame.activeConfig5();
}//GEN-LAST:event_NextButtonActionPerformed

private void PrevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrevButtonActionPerformed
    this.setVisible(false);
    amesFrame.activeConfig4();
}//GEN-LAST:event_PrevButtonActionPerformed

private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
      setVisible(false);
}//GEN-LAST:event_CancelButtonActionPerformed

private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
    String strErrorMessage=SingleGenDataVerify();
    if(!strErrorMessage.isEmpty()){
        JOptionPane.showMessageDialog(this, strErrorMessage, "Learning Data Verify Message", JOptionPane.ERROR_MESSAGE); 
        return;
    }
    else{
        genLearningData[iSelectedIndex][0]=InitPropensity;
        genLearningData[iSelectedIndex][1]=Cooling;
        genLearningData[iSelectedIndex][2]=Recency;
        genLearningData[iSelectedIndex][3]=Experimentation;
        genLearningData[iSelectedIndex][4]=M1;
        genLearningData[iSelectedIndex][5]=M2;
        genLearningData[iSelectedIndex][6]=M3;
        genLearningData[iSelectedIndex][7]=RI_MAX_Lower;
        genLearningData[iSelectedIndex][8]=RI_MAX_Upper;
        genLearningData[iSelectedIndex][9]=RI_MIN_C;
        genLearningData[iSelectedIndex][10]=SlopeStart;
        genLearningData[iSelectedIndex][11]=iSCostExcludedFlag;
    }
    
    strErrorMessage=DataVerify();
    
    if(strErrorMessage.isEmpty()){
        bOkSelect=true;
        setVisible(false);
        
        amesFrame.learnOption1.loadData(amesFrame.genData, genLearningData);
    
        amesFrame.InitializeAMESMarket();
    }
    else{
        JOptionPane.showMessageDialog(this, strErrorMessage, "Learning Data Verify Message", JOptionPane.ERROR_MESSAGE); 
    }
}
//GEN-LAST:event_OKButtonActionPerformed

    private void GenNameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenNameComboBoxActionPerformed

        if(!bDataLoad)
            return;
        
        int iNewSelectedIndex=GenNameComboBox.getSelectedIndex();
        // nothing left in ComboBox
        if(GenNameComboBox.getSelectedItem()==null)
            return;
        
        String selectedName=(String)GenNameComboBox.getSelectedItem();
        
        if(genName.equalsIgnoreCase(selectedName))
            return;
        else{
            String strErrorMessage=SingleGenDataVerify();
            if(strErrorMessage.isEmpty()){
                genLearningData[iSelectedIndex][0]=InitPropensity;
                genLearningData[iSelectedIndex][1]=Cooling;
                genLearningData[iSelectedIndex][2]=Recency;
                genLearningData[iSelectedIndex][3]=Experimentation;
                genLearningData[iSelectedIndex][4]=M1;
                genLearningData[iSelectedIndex][5]=M2;
                genLearningData[iSelectedIndex][6]=M3;
                genLearningData[iSelectedIndex][7]=RI_MAX_Lower;
                genLearningData[iSelectedIndex][8]=RI_MAX_Upper;
                genLearningData[iSelectedIndex][9]=RI_MIN_C;
                genLearningData[iSelectedIndex][10]=SlopeStart;
                genLearningData[iSelectedIndex][11]=iSCostExcludedFlag;
                
                iSelectedIndex=iNewSelectedIndex;
            }
            else
                return;
        }
        
        genName=selectedName;
        
        SelectGen(genName);
}//GEN-LAST:event_GenNameComboBoxActionPerformed

    private void ProfitRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfitRadioButtonActionPerformed
     iSCostExcludedFlag=0;
     genLearningData[iSelectedIndex][11]=iSCostExcludedFlag;
    }//GEN-LAST:event_ProfitRadioButtonActionPerformed

    private void NetEarningsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NetEarningsRadioButtonActionPerformed
     iSCostExcludedFlag=1;
     genLearningData[iSelectedIndex][11]=iSCostExcludedFlag;
    }//GEN-LAST:event_NetEarningsRadioButtonActionPerformed
       

public String SingleGenDataVerify(){
    String strTemp=CoolingTextField.getText();
    double dTemp;

    String message="The Cooling paramter should bigger than "+ 0;
    try {
        dTemp=Double.parseDouble(strTemp);

        if(dTemp<0) {
            JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
            return message;
        }
        else
           Cooling=dTemp;
    }
    catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
        return message;
      }

    strTemp=ExperimentationTextField.getText();
    message="The Experimentation paramter should bigger than "+ 0;
    try {
        dTemp=Double.parseDouble(strTemp);

        if(dTemp<0) {
            JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
            return message;
        }
        else
           Experimentation=dTemp;
    }
    catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
        return message;
      }

    strTemp=InitPropensityTextField.getText();
    message="The InitPropensity paramter should bigger than "+ 0;
    try {
        dTemp=Double.parseDouble(strTemp);

        if(dTemp<0) {
            JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
            return message;
        }
        else
           InitPropensity=dTemp;
    }
    catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
        return message;
      }

    strTemp=RecencyTextField.getText();
    message="The Recency paramter should bigger than "+ 0;
    try {
        dTemp=Double.parseDouble(strTemp);

        if(dTemp<0) {
            JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
            return message;
        }
        else
           Recency=dTemp;
    }
    catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
        return message;
      }

    strTemp=M1TextField.getText();
    int iTemp;
    message="The M1 paramter should bigger than "+ 0;
    try {
        iTemp=Integer.parseInt(strTemp);

        if(iTemp<0) {
            JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
            return message;
        }
        else
           M1=iTemp;
    }
    catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
        return message;
      }

    strTemp=M2TextField.getText();
    message="The M2 paramter should bigger than "+ 0;
    try {
        iTemp=Integer.parseInt(strTemp);

        if(iTemp<0) {
            JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
            return message;
        }
        else
           M2=iTemp;
    }
    catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
        return message;
      }

    strTemp=M3TextField.getText();
    message="The M3 paramter should bigger than "+ 0;
    try {
        iTemp=Integer.parseInt(strTemp);

        if(iTemp<0) {
            JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
            return message;
        }
        else
           M3=iTemp;
    }
    catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
        return message;
      }

    strTemp=RI_MAX_LowerTextField.getText();
    message="The RIMaxL paramter should greater than or equal to 0.0 and less than 1.0!";
    try {
        dTemp=Double.parseDouble(strTemp);

        if((dTemp<0)||(dTemp>=1.0)) {
            JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
            return message;
        }
        else
           RI_MAX_Lower=dTemp;
    }
    catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
        return message;
      }

    strTemp=RI_MAX_UpperTextField.getText();
    message="The RIMaxU paramter should greater than or equal to 0.0 and less than 1.0!";
    try {
        dTemp=Double.parseDouble(strTemp);

        if((dTemp<0)||(dTemp>=1.0)) {
            JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
            return message;
        }
        else
           RI_MAX_Upper=dTemp;
    }
    catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
        return message;
      }

    strTemp=RI_MIN_CTextField.getText();
    message="The RIMinC paramter should greater than 0.0 and less than or equal to 1.0!";
    try {
        dTemp=Double.parseDouble(strTemp);

        if((dTemp<=0)||(dTemp>1.0)) {
            JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
            return message;
        }
        else
           RI_MIN_C=dTemp;
    }
    catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
        return message;
      }

    strTemp=SlopeStartTextField.getText();
    message="The SlopeStart paramter should bigger than "+ 0;
    try {
        dTemp=Double.parseDouble(strTemp);

        if(dTemp<0) {
            JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
            return message;
        }
        else
           SlopeStart=dTemp;
    }
    catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, message, "Error Message", JOptionPane.ERROR_MESSAGE); 
        return message;
      }

    if(M3>1){
        if(RI_MIN_C>=1.0){
            JOptionPane.showMessageDialog(this, "When M3 is bigger than 1, RI_MIN_C should less than 1.0", "Error Message", JOptionPane.ERROR_MESSAGE); 
            return message;
        }
    }
    
    //amesFrame.SetLearningParameters(Cooling, Experimentation, InitPropensity, Recency, M1, M2, M3, RI_MAX_Lower, RI_MAX_Upper, RI_MIN_C, SlopeStart);
    return "";
}
    
public String DataVerify(){
    String strMessage="";

    for(int i=0; i<genLearningData.length; i++){
        String genName=(String)GenNameComboBox.getItemAt(i);
        String message=genName+"'s Cooling paramter should bigger than 0! \n";
        if(genLearningData[i][1]<0) {
            strMessage+=message;
        }

        message=genName+"'s InitPropensity paramter should bigger than 0! \n";
        if(genLearningData[i][0]<0) {
            strMessage+=message;
        }

        message=genName+"'s Recency paramter should bigger than 0! \n";
        if(genLearningData[i][2]<0) {
            strMessage+=message;
        }

        message=genName+"'s Experimentation paramter should bigger than 0! \n";
        if(genLearningData[i][3]<0) {
            strMessage+=message;
        }

        message=genName+"'s M1 paramter should bigger than 0! \n";
        if(genLearningData[i][4]<0) {
            strMessage+=message;
        }

        message=genName+"'s M2 paramter should bigger than 0! \n";
        if(genLearningData[i][5]<0) {
            strMessage+=message;
        }

        message=genName+"'s M3 paramter should bigger than 0! \n";
        if(genLearningData[i][6]<0) {
            strMessage+=message;
        }

        message=genName+"'s RIMaxL paramter should greater than or equal to 0.0 and less than 1.0!\n";
        if((genLearningData[i][7]<0)||(genLearningData[i][7]>=1.0)) {
            strMessage+=message;
        }

        message=genName+"'s RIMaxU paramter should greater than or equal to 0.0 and less than 1.0!\n";
        if((genLearningData[i][8]<0)||(genLearningData[i][8]>=1.0)) {
            strMessage+=message;
        }

        message=genName+"'s RIMinC paramter should greater than 0.0 and less than or equal to 1.0!\n";
        if((genLearningData[i][9]<0)||(genLearningData[i][9]>1.0)) {
            strMessage+=message;
        }

        message=genName+"'s SlopeStart paramter should bigger than 0!\n";
        if(genLearningData[i][10]<0) {
            strMessage+=message;
        }

        if(genLearningData[i][6]>1){ //M3
            if(genLearningData[i][9]>=1.0){  //RIMinC
                strMessage+="When M3 is bigger than 1, RI_MIN_C should less than 1.0!\n";
            }
        }
    }
    
    if(strMessage.isEmpty()){
        amesFrame.SetLearningParameters(genLearningData);
    }

    return strMessage;
}

public double [][] saveData( ) {
    return genLearningData;
}
    
public boolean IfOkSelect(){
    return bOkSelect;
}

public void  loadData(Object [][] genData, double[][] learningData) {
    bDataLoad=false;
    
    GenNameComboBox.removeAllItems();
    genLearningData=new double[genData.length][12];
    
    for(int i=0; i<genData.length; i++) {
       GenNameComboBox.addItem(genData[i][0].toString());
       
       for(int j=0;j<12; j++){
           genLearningData[i][j]=learningData[i][j];
       }
    }
    
    if(GenNameComboBox.getItemCount()<1)
        return;
    GenNameComboBox.setSelectedIndex(0);
    genName = (String)GenNameComboBox.getItemAt(0);

    SelectGen(genName);
    
    bDataLoad=true;
}

private void SelectGen(String name){
    GenNameComboBox.setSelectedItem(name);
    int iIndex=GenNameComboBox.getSelectedIndex();
    iSelectedIndex=iIndex;
    
    SetInitParameters(genLearningData[iIndex][0],
            genLearningData[iIndex][1],
            genLearningData[iIndex][2],
            genLearningData[iIndex][3],
            genLearningData[iIndex][4],
            genLearningData[iIndex][5],
            genLearningData[iIndex][6],
            genLearningData[iIndex][7],
            genLearningData[iIndex][8],
            genLearningData[iIndex][9],
            genLearningData[iIndex][10],
            genLearningData[iIndex][11]);
}

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JTextField CoolingTextField;
    private javax.swing.JTextField ExperimentationTextField;
    private javax.swing.JComboBox GenNameComboBox;
    private javax.swing.JTextField InitPropensityTextField;
    private javax.swing.JTextField M1TextField;
    private javax.swing.JTextField M2TextField;
    private javax.swing.JTextField M3TextField;
    private javax.swing.JRadioButton NetEarningsRadioButton;
    private javax.swing.JButton NextButton;
    private javax.swing.JButton OKButton;
    private javax.swing.JButton PrevButton;
    private javax.swing.JRadioButton ProfitRadioButton;
    private javax.swing.JTextField RI_MAX_LowerTextField;
    private javax.swing.JTextField RI_MAX_UpperTextField;
    private javax.swing.JTextField RI_MIN_CTextField;
    private javax.swing.JTextField RecencyTextField;
    private javax.swing.JTextField SlopeStartTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
    private double Cooling;
    private double Experimentation;
    private double InitPropensity;
    private int M1;
    private int M2;
    private int M3;
    private double RI_MAX_Lower;
    private double RI_MAX_Upper;
    private double RI_MIN_C;
    private double Recency;
    private double SlopeStart;
    private int iSCostExcludedFlag;
    
    private boolean bDataLoad=false;
    private String genName;
    private int    iSelectedIndex;
    private double[][] genLearningData;
    
    private boolean bOkSelect;
    private boolean bPrevNextButtonShown;
   
    private AMESFrame amesFrame;
    
}
